<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [TFT_TCS\TFT_TCS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image TFT_TCS\TFT_TCS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Sat May 22 14:49:55 2021
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[24]">CEC_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[11]">DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from main.o(.text.EXTI4_15_IRQHandler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32g0xx_it.o(.text.HardFault_Handler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32g0xx_it.o(.text.NMI_Handler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32g0xx_it.o(.text.PendSV_Handler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[8]">RTC_TAMP_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32g0xx_it.o(.text.SVC_Handler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32g0xx_it.o(.text.SysTick_Handler) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_stm32g0xx.o(.text.SystemInit) referenced from startup_stm32g071xx.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_LPTIM1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[18]">TIM7_LPTIM2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[e]">UCPD1_2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[23]">USART3_4_LPUART1_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32g071xx.o(.text) referenced from startup_stm32g071xx.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32g071xx.o(.text)
 <LI><a href="#[25]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[62]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[63]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[64]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[65]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[66]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM7_LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UCPD1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART3_4_LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_food
</UL>

<P><STRONG><a name="[67]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_WZ
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_TCS
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_idiv$div0</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_idivmod</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_food
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, main.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI4_15_IRQHandler &rArr; mods
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mods
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_WZ
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_TCS
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[30]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>Error_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[36]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32g0xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_TFT
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_ILI9341
</UL>

<P><STRONG><a name="[49]"></a>HAL_GPIO_Init</STRONG> (Thumb, 400 bytes, Stack size 60 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[5f]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_TFT
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_ILI9341
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[37]"></a>HAL_GetTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32g0xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[4a]"></a>HAL_IncTick</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32g0xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[38]"></a>HAL_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g0xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>HAL_InitTick</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32g0xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[3a]"></a>HAL_MspInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32g0xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_StrobeDBattpinsConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[3f]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[3d]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[42]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_PWREx_ControlVoltageScaling &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[43]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[44]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[45]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1116 bytes, Stack size 48 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[3e]"></a>HAL_SYSCFG_StrobeDBattpinsConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32g0xx_hal.o(.text.HAL_SYSCFG_StrobeDBattpinsConfig))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[3c]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SystemClock_Config</STRONG> (Thumb, 88 bytes, Stack size 88 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_stm32g0xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g071xx.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>ads</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.ads))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_food
</UL>

<P><STRONG><a name="[4e]"></a>change</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, main.o(.text.change))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = change &rArr; machine &rArr; check
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;result
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;machine
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnd
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>check</STRONG> (Thumb, 280 bytes, Stack size 20 bytes, main.o(.text.check))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = check
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_food
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;machine
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnd
</UL>

<P><STRONG><a name="[33]"></a>clear_TCS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text.clear_TCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_TCS
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>clear_WZ</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text.clear_WZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_WZ
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>comm_out</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.comm_out))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_ILI9341
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_TCS
</UL>

<P><STRONG><a name="[54]"></a>data_out</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text.data_out))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_ILI9341
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_TCS
</UL>

<P><STRONG><a name="[52]"></a>display_TCS</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, main.o(.text.display_TCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = display_TCS &rArr; write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_out
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_out
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>display_ZF</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, main.o(.text.display_ZF))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = display_ZF &rArr; write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_out
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_out
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;result
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnd
</UL>

<P><STRONG><a name="[34]"></a>draw</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main.o(.text.draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = draw
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>fnd</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, main.o(.text.fnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fnd &rArr; display_ZF &rArr; write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printff
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change
</UL>

<P><STRONG><a name="[59]"></a>get_food</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main.o(.text.get_food))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_food
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;machine
</UL>

<P><STRONG><a name="[5b]"></a>ini_ILI9341</STRONG> (Thumb, 616 bytes, Stack size 56 bytes, main.o(.text.ini_ILI9341))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ini_ILI9341 &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_out
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_out
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>machine</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, main.o(.text.machine))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = machine &rArr; check
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_food
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 1256 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_TFT
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_food
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printff
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ini_ILI9341
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_TCS
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[35]"></a>mods</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, main.o(.text.mods))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mods
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>other</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text.other))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;machine
</UL>

<P><STRONG><a name="[58]"></a>printff</STRONG> (Thumb, 392 bytes, Stack size 16 bytes, main.o(.text.printff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = printff
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;result
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnd
</UL>

<P><STRONG><a name="[5e]"></a>rand_food</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, main.o(.text.rand_food))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rand_food &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>reset_TFT</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(.text.reset_TFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = reset_TFT &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>result</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, main.o(.text.result))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = result &rArr; display_ZF &rArr; write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printff
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change
</UL>

<P><STRONG><a name="[55]"></a>write_data</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text.write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_ZF
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_TCS
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[70]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[71]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[47]"></a>MX_GPIO_Init</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, main.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>SysTick_Config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g0xx_hal_cortex.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[40]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32g0xx_hal_cortex.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[41]"></a>__NVIC_SetPriority</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32g0xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
